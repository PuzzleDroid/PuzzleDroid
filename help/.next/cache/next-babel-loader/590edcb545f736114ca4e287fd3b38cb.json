{"ast":null,"code":"var _jsxFileName = \"/Users/JAVI/StudioProjects/PuzzleDroid/help/pages_/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport { Box, Container, Grid, MenuItem, MenuList, Link, Typography, AppBar, Toolbar, CssBaseline } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/core/styles\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: \"#ed7e00\",\n      dark: \"#00171f\"\n    },\n    secondary: {\n      main: \"#ed7e00\",\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: \"#FBFBFB\"\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2\n  }\n});\n\nfunction Home() {\n  const {\n    t\n  } = useTranslation();\n  const sections = [\"howto\", \"save\", \"win\"];\n\n  const shwoMenuItem = key => __jsx(MenuItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: `#${key}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, t(`${key}:title`)));\n\n  const showContent = key => __jsx(\"div\", {\n    id: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, t(`${key}:title`)), __jsx(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, t(`${key}:content`)));\n\n  const {\n    palette\n  } = theme;\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"\\u2026\"), __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), __jsx(AppBar, {\n    component: \"span\",\n    position: \"static\",\n    style: {\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    color: \"textSecondary\",\n    variant: \"h4\",\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, t(\"title\"))))), __jsx(Container, {\n    maxWidth: \"md\",\n    style: {\n      marginTop: \"50px\",\n      marginBottom: \"80px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(MenuList, {\n    style: {\n      borderTop: `1px solid ${palette.primary.main}`,\n      borderBottom: `1px solid ${palette.primary.main}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, sections.map(key => shwoMenuItem(key)))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, sections.map(key => showContent(key)))))), __jsx(AppBar, {\n    color: \"secondary\",\n    style: {\n      top: \"auto\",\n      bottom: 0\n    },\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    display: \"block\",\n    style: {\n      width: \"100%\"\n    },\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"\\xA9PuzzleDroid 2020\")))));\n}\n\nHome.getStaticProps = async ({\n  lang\n}) => {\n  return {\n    props: {\n      lang\n    }\n  };\n};","map":{"version":3,"sources":["/Users/JAVI/StudioProjects/PuzzleDroid/help/pages_/index.js"],"names":["Head","Box","Container","Grid","MenuItem","MenuList","Link","Typography","AppBar","Toolbar","CssBaseline","createMuiTheme","ThemeProvider","useTheme","theme","palette","primary","main","dark","secondary","contrastText","contrastThreshold","tonalOffset","Home","t","useTranslation","sections","shwoMenuItem","key","showContent","padding","fontWeight","marginTop","marginBottom","borderTop","borderBottom","map","top","bottom","width","getStaticProps","lang","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SACEC,GADF,EAEEC,SAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,IANF,EAOEC,UAPF,EAQEC,MARF,EASEC,OATF,EAUEC,WAVF,QAWO,mBAXP;AAYA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AAC3BI,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACP;AACAC,MAAAA,IAAI,EAAE,SAFC;AAGPC,MAAAA,IAAI,EAAE;AAHC,KADF;AAMPC,IAAAA,SAAS,EAAE;AACTF,MAAAA,IAAI,EAAE,SADG;AAET;AACAG,MAAAA,YAAY,EAAE;AAHL,KANJ;AAWP;AACA;AACAC,IAAAA,iBAAiB,EAAE,CAbZ;AAcP;AACA;AACA;AACAC,IAAAA,WAAW,EAAE;AAjBN;AADkB,CAAD,CAA5B;;AAsBA,SAASC,IAAT,GAAgB;AACd,QAAM;AAAEC,IAAAA;AAAF,MAAQC,cAAc,EAA5B;AACA,QAAMC,QAAQ,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,CAAjB;;AAEA,QAAMC,YAAY,GAAIC,GAAD,IACnB,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,IAAGA,GAAI,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBJ,CAAC,CAAE,GAAEI,GAAI,QAAR,CAAzB,CADF,CADF;;AAMA,QAAMC,WAAW,GAAID,GAAD,IAClB;AAAK,IAAA,EAAE,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,CAAC,CAAE,GAAEI,GAAI,QAAR,CADJ,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,YAAY,MAAxC;AAAyC,IAAA,SAAS,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,CAAC,CAAE,GAAEI,GAAI,UAAR,CADJ,CAJF,CADF;;AAWA,QAAM;AAAEb,IAAAA;AAAF,MAAcD,KAApB;AAEA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,QAAQ,EAAC,QAAlC;AAA2C,IAAA,KAAK,EAAE;AAAEgB,MAAAA,OAAO,EAAE;AAAX,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGP,CAAC,CAAC,OAAD,CALJ,CADF,CADF,CADF,CAHF,EAgBE,MAAC,SAAD;AACE,IAAA,QAAQ,EAAC,IADX;AAEE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,YAAY,EAAE;AAAnC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEH,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,SAAS,EAAG,aAAYnB,OAAO,CAACC,OAAR,CAAgBC,IAAK,EADxC;AAELkB,MAAAA,YAAY,EAAG,aAAYpB,OAAO,CAACC,OAAR,CAAgBC,IAAK;AAF3C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGS,QAAQ,CAACU,GAAT,CAAcR,GAAD,IAASD,YAAY,CAACC,GAAD,CAAlC,CANH,CADF,CADF,EAWE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,CAACU,GAAT,CAAcR,GAAD,IAASC,WAAW,CAACD,GAAD,CAAjC,CADH,CAXF,CADF,CAJF,CAhBF,EAsCE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,KAAK,EAAE;AACLS,MAAAA,GAAG,EAAE,MADA;AAELC,MAAAA,MAAM,EAAE;AAFH,KAFT;AAME,IAAA,QAAQ,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAnC;AAAsD,IAAA,KAAK,EAAC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,CARF,CAtCF,CADF;AAyDD;;AAEDhB,IAAI,CAACiB,cAAL,GAAsB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAoB;AACxC,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLD,MAAAA;AADK;AADF,GAAP;AAKD,CAND","sourcesContent":["import Head from \"next/head\";\nimport {\n  Box,\n  Container,\n  Grid,\n  MenuItem,\n  MenuList,\n  Link,\n  Typography,\n  AppBar,\n  Toolbar,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: \"#ed7e00\",\n      dark: \"#00171f\",\n    },\n    secondary: {\n      main: \"#ed7e00\",\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: \"#FBFBFB\",\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n});\n\nfunction Home() {\n  const { t } = useTranslation();\n  const sections = [\"howto\", \"save\", \"win\"];\n\n  const shwoMenuItem = (key) => (\n    <MenuItem>\n      <Link href={`#${key}`}>{t(`${key}:title`)}</Link>\n    </MenuItem>\n  );\n\n  const showContent = (key) => (\n    <div id={key}>\n      <Typography variant=\"h5\" gutterBottom>\n        {t(`${key}:title`)}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom paragraph>\n        {t(`${key}:content`)}\n      </Typography>\n    </div>\n  );\n\n  const { palette } = theme;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Head>…</Head>\n      <CssBaseline />\n      <AppBar component=\"span\" position=\"static\" style={{ padding: \"10px\" }}>\n        <Toolbar>\n          <Container maxWidth=\"md\">\n            <Typography\n              color=\"textSecondary\"\n              variant=\"h4\"\n              style={{ fontWeight: \"bold\" }}\n            >\n              {t(\"title\")}\n            </Typography>\n          </Container>\n        </Toolbar>\n      </AppBar>\n      <Container\n        maxWidth=\"md\"\n        style={{ marginTop: \"50px\", marginBottom: \"80px\" }}\n      >\n        <Box style={{ padding: 20 }}>\n          <Grid container spacing={10}>\n            <Grid item xs={12} md={4}>\n              <MenuList\n                style={{\n                  borderTop: `1px solid ${palette.primary.main}`,\n                  borderBottom: `1px solid ${palette.primary.main}`,\n                }}\n              >\n                {sections.map((key) => shwoMenuItem(key))}\n              </MenuList>\n            </Grid>\n            <Grid item xs={12} md={8}>\n              {sections.map((key) => showContent(key))}\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n      <AppBar\n        color=\"secondary\"\n        style={{\n          top: \"auto\",\n          bottom: 0,\n        }}\n        position=\"static\"\n      >\n        <Toolbar>\n          <Container maxWidth=\"md\">\n            <Typography display=\"block\" style={{ width: \"100%\" }} align=\"right\">\n              ©PuzzleDroid 2020\n            </Typography>\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </ThemeProvider>\n  );\n}\n\nHome.getStaticProps = async ({ lang }) => {\n  return {\n    props: {\n      lang,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}