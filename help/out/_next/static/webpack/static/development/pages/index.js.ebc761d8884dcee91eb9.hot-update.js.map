{"version":3,"file":"static/webpack/static/development/pages/index.js.ebc761d8884dcee91eb9.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { useContext } from \"react\";\nimport Head from \"next/head\";\nimport {\n  Box,\n  Container,\n  Grid,\n  MenuItem,\n  MenuList,\n  Link,\n  Typography,\n  AppBar,\n  Toolbar,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { i18n, withTranslation } from \"../lib/i18n\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: \"#ed7e00\",\n      dark: \"#00171f\",\n    },\n    secondary: {\n      main: \"#ed7e00\",\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: \"#FBFBFB\",\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n});\n\nfunction Home({ t }) {\n  const sections = [\"howto\", \"save\", \"win\"];\n\n  const shwoMenuItem = (key) => (\n    <MenuItem>\n      <Link href={`#${key}`}>{t(`${key}:title`)}</Link>\n    </MenuItem>\n  );\n\n  const showContent = (key) => (\n    <div id={key}>\n      <Typography variant=\"h5\" gutterBottom>\n        {t(`${key}:title`)}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom paragraph>\n        {t(`${key}:content`)}\n      </Typography>\n    </div>\n  );\n\n  const { palette } = theme;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Head>…</Head>\n      <CssBaseline />\n      <AppBar component=\"span\" position=\"static\" style={{ padding: \"10px\" }}>\n        <Toolbar>\n          <Container maxWidth=\"md\">\n            <Typography\n              color=\"textSecondary\"\n              variant=\"h4\"\n              style={{ fontWeight: \"bold\" }}\n            >\n              {t(\"title\")}\n            </Typography>\n          </Container>\n        </Toolbar>\n      </AppBar>\n      <Container\n        maxWidth=\"md\"\n        style={{ marginTop: \"50px\", marginBottom: \"80px\" }}\n      >\n        <Box style={{ padding: 20 }}>\n          <Grid container spacing={10}>\n            <Grid item xs={12} md={4}>\n              <MenuList\n                style={{\n                  borderTop: `1px solid ${palette.primary.main}`,\n                  borderBottom: `1px solid ${palette.primary.main}`,\n                }}\n              >\n                {sections.map((key) => shwoMenuItem(key))}\n              </MenuList>\n            </Grid>\n            <Grid item xs={12} md={8}>\n              {sections.map((key) => showContent(key))}\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n      <AppBar\n        color=\"secondary\"\n        style={{\n          top: \"auto\",\n          bottom: 0,\n        }}\n        position=\"static\"\n      >\n        <Toolbar>\n          <Container maxWidth=\"md\">\n            <Typography display=\"block\" style={{ width: \"100%\" }} align=\"right\">\n              ©PuzzleDroid 2020\n            </Typography>\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </ThemeProvider>\n  );\n}\n\nHome.getInitialProps = async () => {\n  const namespacesRequired = [\"common\", \"howto\", \"save\", \"win\"];\n\n  return {\n    props: {\n      namespacesRequired,\n    },\n  };\n};\n\nexport default withTranslation(\"common\")(Home);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AADA;AACA;AAqBA;AAAA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AAVA;AAsBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AADA;AADA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;;;;A","sourceRoot":""}